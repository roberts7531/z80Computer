_SysRST		equ	0	;System Reset
_ConIN		equ	1	;Console input
_ConOUT		equ	2	;Console output
_RdrIN		equ	3	;Reader input
_PunOUT		equ	4	;Punch output
_LstOUT		equ	5	;list output
_ConDIO		equ	6	;Direct Console IO (23)
_GetIOB		equ	7	;Get IO byte
_SetIOB		equ	8	;Set IO byte
_PrtSTR		equ	9	;print string $ 
_ConBUF		equ	10	;read console buffer
_ConSTAT	equ	11	;Get console Status

_Version	equ	12	;Get version number (23)

_RstDskSys	equ	13	;Reset Disk system
_SelDSK		equ	14	;Select Disk
_Open		equ	15	;Open file
_Close		equ	16	;Close file
_SearchF	equ	17	;Search for First
_SearchN	equ	18	;Search for Next
_Delete		equ	19	;Delete file
_ReadSEQ	equ	20	;Read Sequential
_WriteSEQ	equ	21	;Write Sequential
_Make		equ	22	;Make file
_Rename		equ	23	;Rename file
_GetLogVect	equ	24	;Return Login Vector
_GetCurDisk	equ	25	;Return Current Disk
_SetDMA		equ	26	;Set DMA Address
_GetAloc	equ	27	;Get Addr (allocation vector)
_WProtDsk	equ	28	;Write protect Disk (23)
_GetROVect	equ	29	;Get R/O Vector (23)
_SetFileAttr	equ	30	;Set File Attributes (23)
_GetDPB		equ	31	;Get Addr (disk parameters) (23)
_GetSetUser	equ	32	;Get/Set User Code (23)
_ReadRAN	equ	33	;Read Random (23)
_WriteRAN	equ	34	;Write Random (23)
_GetFileSize	equ	35	;Compute File Size (23)
_SetRanRec	equ	36	;Set Random Record (23)
_RstDrive	equ	37	;Reset Drive (23)
_WriteRAN0	equ	40	;Write Random zero fill (23)

CR	equ	0DH
LF	equ	0AH

_BDOS		equ	5	;BDOS ENTRY POINT
_Drive		equ	4	;Last Logged Drive
_DefFCB		equ	0x005c	;Default FCB
_DefFCB1	equ	0x006c	;Auxillary FCB
_DefDMA		equ	0x0080	;Defualt DMA buffer


; Invoke BDOS by function number

BDOSDE	MACRO	?Function,?argDE
	mvi	c,?Function
	if	not nul(?argDE)
	lxi	de,?argDE	; argument, fcb, DMA, buffer
	endif
	call	_BDOS
	ENDM

; Invoke BDOS by function number

BDOSE	MACRO	?Function,?argDE
	mvi	c,?Function
	if	not nul(?argDE)
	mvi	d,?argDE		; argument, disk#, Char/flag, IOBYTE
	endif
	call	_BDOS
	ENDM

; Print a string terminated by $

Print$ 	MACRO	?Str
	LOCAL	~cont,~msgSTR
	jmp	~cont
~msgSTR:	db	?Str,'$'
~cont:	lxi	D,~msgSTR
	ifdef	CPM22ASI
	call	PrintString
	else
	mvi	C,_PrtSTR
	call	_BDOS
	endm
	ENDM

; Print a string terminated by $

Print 	MACRO	?Ptr
	lxi	D,?Ptr
	ifdef	CPM22ASI
	call	PrintString
	else
	mvi	C,_PrtSTR
	call	_BDOS
	endif
	ENDM

; Move a block of Memory

Move	MACRO	?Dst,?Src,?Cnt
	if	not nul(?Src)
	 lxi	hl,?Src	
	endif
	if	not nul(?Dst)
	 lxi	de,?Dst	
	endif
	if	not nul(?Cnt)
	 lxi	bc,?Cnt	
	endif
	ifdef	CPM22ASI
	 call	BlockMove
;	 ldir
	else
	 ldir
	endif
	ENDM


; Set up globals

Globals	MACRO
gDrive	db       0        ;Saved Current Drive
gStack	dw       0        ;Saved CP/M Stack
	ENDM

; Set up Stack
Stack	MACRO	?Size
	ds	?Size
~Stack:	equ	$
	ENDM

; Startup program

Startup	MACRO	
~Startup: 
	sspd	gStack		;save stack
	lxi	sp,~Stack	;new stack
	lda	_Drive		;save drive
	sta	gDrive
	ENDM

; Exit program

Exit	MACRO
~Exit	lda      gDrive		;restore drive
	sta      _Drive
	lspd     gStack		;restore stack
	ret
	ENDM

; Entry point from CPM

Entry	MACRO	?Saddr
	org	?Saddr
~Entry	jmp	~Startup
	ENDM