
jsys	macro	function
	rst	1
	db	function
	endm

alarm	macro	Seconds
	if not nul(Seconds)
	 lxi	hl,Seconds
	endif
	jsys	.alarm
	endm
pause	macro
	jsys	.pause
	endm
sleep	macro	Seconds
	if not nul(Seconds)
	 lxi	hl,Seconds
	endif
	jsys	.sleep
	endm
caccess	macro	Channel,AccessBits
	if not nul(Channel)
	 mvi	b,Channel
	endif
	if not nul(AccessBits)
	 mvi	c,AccessBits
	endif
	jsys	.caccess
	endm
cchstat macro	Channel,Status,NewStatus,Mask
	if not nul(Channel)
	 mvi	b,Channel
	endif
	if not nul(Status)
	 mvi	c,Status
	endif
	if not nul(NewStatus)
	 mvi	d,NewStatus
	endif
	if not nul(Mask)
	 mvi	e,Mask
	endif
	jsys	.cchstat
	endm
chdup	macro	Channel
	if not nul(Channel)
	 mvi	b,Channel
	endif
	jsys	.chdup
	endm
close	macro	Channel
	if not nul(Channel)
	 mvi	b,Channel
	endif
	jsys	.close
	endm
create	macro	ptrPath,AccessMode,ExMode
	if not nul(ptrPath)
	 lxi	hl,ptrPath
	endif
	if not nul(AccessMode)
	 mvi	c,AccessMode
	endif
	if not nul(ExMode)
	 mvi	d,ExMode
	endif
	jsys	.create
	endm
open	macro	ptrPath,AccessMode,ExMode
	if not nul(ptrPath)
	 lxi	hl,ptrPath
	endif
	if not nul(AccessMode)
	 mvi	c,AccessMode
	endif
	if not nul(ExMode)
	 mvi	d,ExMode
	endif
	jsys	.open
	endm
cstat	macro	Channel,Info,ptrBuffer,
	if not nul(Channel)
	 mvi	b,Channel
	endif
	if not nul(Info)
	 mvi	c,Info
	endif
	if not nul(ptrBuffer)
	 lxi	de,ptrBuffer
	endif
	jsys	.cstat
	endm
fstat	macro	ptrPath,Info,ptrBuffer,
	if not nul(ptrPath)
	 lxi	hl,ptrPath
	endif
	if not nul(Info)
	 mvi	c,Info
	endif
	if not nul(ptrBuffer)
	 lxi	de,ptrBuffer
	endif
	jsys	.fstat
	endm
delete	macro	ptrPath
	if not nul(ptrPath)
	 lxi	hl,ptrPath
	endif
	jsys	.delete
	endm
perror	macro	Channel
	if nul(Channel)
	 mvi	b,stderr
	else
	 mvi	b,Channel
	endif
	jsys	.error
	endm
exit	macro	TermStatus
	if not nul(TermStatus)
	 lxi	hl,TermStatus
	endif
	jsys	.exit
	endm
getdir	macro	ptrBuffer
	if not nul(ptrBuffer)
	 lxi	hl,ptrBuffer
	endif
	jsys	.getdir
	endm
printf	macro	Channel,ptrCntrlStr
	if not nul(Channel)
	 mvi	b,Channel
	endif
	if not nul(ptrCntrlStr)
	 lxi	hl,ptrCntrlStr
	endif
	jsys	.printf
	endm
rdbyte	macro	Channel
	if not nul(Channel)
	 mvi	b,Channel
	endif
	jsys	.rdbyte
	endm
rdline	macro	Channel,ptrBuffer,MaxBytes
	if not nul(Channel)
	 mvi	b,Channel
	endif
	if not nul(MaxBytes)
	 lxi	de,MaxBytes
	endif
	if not nul(ptrBuffer)
	 lxi	hl,ptrBuffer
	endif
	jsys	.rdline
	endm
rdseq	macro	Channel,ptrBuffer,NumBytes
	if not nul(Channel)
	 mvi	b,Channel
	endif
	if not nul(ptrBuffer)
	 lxi	hl,ptrBuffer
	endif
	if not nul(NumBytes)
	 lxi	de,NumBytes
	endif
	jsys	.rdseq
	endm
trunc	macro	Channel
	if not nul(Channel)
	 mvi	b,Channel
	endif
	jsys	.trunc
	endm
update	macro	
	jsys	.update
	endm
version	macro	
	jsys	.version
	endm
wrbyte	macro	Channel,Byte
	if not nul(Byte)
	 mvi	a,Byte
	endif
	if not nul(Channel)
	 mvi	b,Channel
	endif
	jsys	.wrbyte
	endm
wrline	macro	Channel,ptrBuffer
	if not nul(Channel)
	 mvi	b,Channel
	endif
	if not nul(ptrBuffer)
	 lxi	hl,ptrBuffer
	endif
	jsys	.wrline
	endm
wrseq	macro	Channel,ptrBuffer,NumBytes
	if not nul(Channel)
	 mvi	b,Channel
	endif
	if not nul(NumBytes)
	 lxi	de,NumBytes
	endif
	if not nul(ptrBuffer)
	 lxi	hl,ptrBuffer
	endif
	jsys	.wrseq
	endm
output	macro	Port,Value
	if not nul(Value)
	 mvi	a,Value
	endif
	out	Port
	endm
input	macro	Port
	in	port
	endm