0001   0000             ;==================================================================================
0002   0000             ; Contents of this file are copyright Grant Searle
0003   0000             ;
0004   0000             ; You have permission to use this for NON COMMERCIAL USE ONLY
0005   0000             ; If you wish to use it elsewhere, please include an acknowledgement to myself.
0006   0000             ;
0007   0000             ; http://searle.hostei.com/grant/index.html
0008   0000             ;
0009   0000             ; eMail: home.micros01@btinternet.com
0010   0000             ;
0011   0000             ; If the above don't work, please perform an Internet search to see if I have
0012   0000             ; updated the web page hosting service.
0013   0000             ;
0014   0000             ;==================================================================================
0015   0000             
0016   0000             numDrives	.EQU	15		; Not including A:
0017   0000             
0018   0000             
0019   0000             ; CF registers
0020   0000             CF_DATA		.EQU	$10
0021   0000             CF_FEATURES	.EQU	$11
0022   0000             CF_ERROR	.EQU	$11
0023   0000             CF_SECCOUNT	.EQU	$12
0024   0000             CF_SECTOR	.EQU	$13
0025   0000             CF_CYL_LOW	.EQU	$14
0026   0000             CF_CYL_HI	.EQU	$15
0027   0000             CF_HEAD		.EQU	$16
0028   0000             CF_STATUS	.EQU	$17
0029   0000             CF_COMMAND	.EQU	$17
0030   0000             CF_LBA0		.EQU	$13
0031   0000             CF_LBA1		.EQU	$14
0032   0000             CF_LBA2		.EQU	$15
0033   0000             CF_LBA3		.EQU	$16
0034   0000             
0035   0000             ;CF Features
0036   0000             CF_8BIT		.EQU	1
0037   0000             CF_NOCACHE	.EQU	082H
0038   0000             ;CF Commands
0039   0000             CF_READ_SEC	.EQU	020H
0040   0000             CF_WRITE_SEC	.EQU	030H
0041   0000             CF_SET_FEAT	.EQU 	0EFH
0042   0000             
0043   0000             LF		.EQU	0AH		;line feed
0044   0000             FF		.EQU	0CH		;form feed
0045   0000             CR		.EQU	0DH		;carriage RETurn
0046   0000             
0047   0000             ;====================================================================================
0048   0000             
0049   5000             		.ORG	5000H		; Format program origin.
0050   5000             
0051   5000             
0052   5000 CD 30 51    		CALL	printInline
0053   5003 43502F4D2046		.TEXT "CP/M Formatter by G. Searle 2012"
0053   5009 6F726D617474657220627920472E20536561726C652032303132
0054   5023 0D 0A 00    		.DB CR,LF,0
0055   5026             
0056   5026 3E 41       		LD	A,'A'
0057   5028 32 58 51    		LD	(drvName),A
0058   502B             
0059   502B             
0060   502B             
0061   502B             ; There are 512 directory entries per disk, 4 DIR entries per sector
0062   502B             ; So 128 x 128 byte sectors are to be initialised
0063   502B             ; The drive uses 512 byte sectors, so 32 x 512 byte sectors per disk
0064   502B             ; require initialisation
0065   502B             
0066   502B             ;Drive 0 (A:) is slightly different due to reserved track, so DIR sector starts at 32
0067   502B 3A 58 51    		LD	A,(drvName)
0068   502E CF          		RST	08H		; Print drive letter
0069   502F 3C          		INC	A
0070   5030 32 58 51    		LD	(drvName),A
0071   5033             
0072   5033 3E 20       		LD	A,$20
0073   5035 32 57 51    		LD	(secNo),A
0074   5038             
0075   5038             processSectorA:
0076   5038 CD 41 51    		CALL	cfWait
0077   503B             
0078   503B 3A 57 51    		LD	A,(secNo)
0079   503E 32 59 51    		ld (lba0),a
0080   5041 D3 13       		OUT 	(CF_LBA0),A
0081   5043 3E 00       		LD	A,0
0082   5045 32 5A 51    		ld (lba1),a
0083   5048 D3 14       		OUT 	(CF_LBA1),A
0084   504A 3E 00       		LD	A,0
0085   504C 32 5B 51    		ld (lba2),a
0086   504F D3 15       		OUT 	(CF_LBA2),A
0087   5051 3E E0       		LD	a,$E0
0088   5053 D3 16       		OUT 	(CF_LBA3),A
0089   5055 3E 01       		ld a,1
0090   5057 D3 12       		OUT 	(CF_SECCOUNT),A
0091   5059             
0092   5059 CD C9 50    		call	writeDir
0093   505C             
0094   505C 3A 57 51    		LD	A,(secNo)
0095   505F 3C          		inc a
0096   5060 32 57 51    		LD	(secNo),A
0097   5063 FE 40       		CP	$40
0098   5065 20 D1       		JR	NZ, processSectorA
0099   5067             
0100   5067             
0101   5067             
0102   5067             ;Drive 1 onwards (B: etc) don't have reserved tracks, so sector starts at 0
0103   5067             
0104   5067 11 40 00    		LD 	DE,$0040  ; HL increment
0105   506A 21 40 00    		LD 	HL,$0040  ; H = LBA2, L=LBA1, initialise for drive 1 (B:)
0106   506D             
0107   506D 06 0F       		LD	B,numDrives
0108   506F             
0109   506F             processDirs:
0110   506F             
0111   506F 3A 58 51    		LD	A,(drvName)
0112   5072 CF          		RST	08H		; Print drive letter
0113   5073 3C          		INC	A
0114   5074 32 58 51    		LD	(drvName),A
0115   5077             
0116   5077 3E 00       		LD	A,0
0117   5079 32 57 51    		LD	(secNo),A
0118   507C             
0119   507C             processSector:
0120   507C CD 41 51    		CALL	cfWait
0121   507F             
0122   507F 3A 57 51    		LD	A,(secNo)
0123   5082 32 59 51    		ld  (lba0),a
0124   5085 D3 13       		OUT 	(CF_LBA0),A
0125   5087 7D          		LD	A,L
0126   5088 32 5A 51    		ld  (lba1),a
0127   508B D3 14       		OUT 	(CF_LBA1),A
0128   508D 7C          		LD	A,H
0129   508E 32 5B 51    		ld  (lba2),a
0130   5091 D3 15       		OUT 	(CF_LBA2),A
0131   5093 3E E0       		LD	a,0E0H
0132   5095 D3 16       		OUT 	(CF_LBA3),A
0133   5097 3E 01       		ld a,1
0134   5099 D3 12       		OUT 	(CF_SECCOUNT),A
0135   509B             
0136   509B CD C9 50    		call	writeDir
0137   509E             
0138   509E 3A 57 51    		LD	A,(secNo)
0139   50A1 3C          		INC a
0140   50A2 32 57 51    		LD	(secNo),A
0141   50A5 FE 20       		CP	$20
0142   50A7 20 D3       		JR	NZ, processSector
0143   50A9             
0144   50A9 19          		ADD	HL,DE
0145   50AA             
0146   50AA 05          		DEC	B
0147   50AB 20 C2       		JR	NZ,processDirs
0148   50AD             
0149   50AD CD 30 51    		CALL	printInline
0150   50B0 0D 0A       		.DB CR,LF
0151   50B2 466F726D6174		.TEXT "Formatting complete"
0151   50B8 74696E6720636F6D706C657465
0152   50C5 0D 0A 00    		.DB CR,LF,0
0153   50C8             
0154   50C8 C9          		RET				
0155   50C9             
0156   50C9             ;================================================================================================
0157   50C9             ; Write physical sector to host
0158   50C9             ;================================================================================================
0159   50C9             
0160   50C9             writeDir:
0161   50C9 F5          		PUSH 	AF
0162   50CA C5          		PUSH 	BC
0163   50CB E5          		PUSH 	HL
0164   50CC             
0165   50CC CD 41 51    		CALL 	cfWait
0166   50CF             
0167   50CF 3E 30       		LD 	A,CF_WRITE_SEC
0168   50D1 D3 17       		OUT 	(CF_COMMAND),A
0169   50D3             
0170   50D3 CD 41 51    		CALL 	cfWait
0171   50D6             
0172   50D6 0E 02       		LD 	c,2
0173   50D8             wr4secs:
0174   50D8 CD 41 51    		CALL 	cfWait
0175   50DB CD 4C 51            call   cfWaitDRQ
0176   50DE 21 5C 51    		LD 	HL,dirData
0177   50E1 06 80       		LD 	b,128
0178   50E3 7E          wrByte:		LD 	A,(HL)
0179   50E4 00          		nop
0180   50E5 00          		nop
0181   50E6 D3 10       		OUT 	(CF_DATA),A
0182   50E8 23          		iNC 	HL
0183   50E9 05          		dec 	b
0184   50EA 20 F7       		JR 	NZ, wrByte
0185   50EC             
0186   50EC 0D          		dec 	c
0187   50ED 20 E9       		JR 	NZ,wr4secs
0188   50EF             ;nxt
0189   50EF CD 41 51    		CALL 	cfWait
0190   50F2 3A 59 51    		LD	A,(lba0)
0191   50F5 D3 13       		OUT 	(CF_LBA0),A
0192   50F7 3A 5A 51    		LD	A,(lba1)
0193   50FA D3 14       		OUT 	(CF_LBA1),A
0194   50FC 3A 5B 51    		LD	A,(lba2)
0195   50FF D3 15       		OUT 	(CF_LBA2),A
0196   5101 3E E1       		LD	a,0E1H
0197   5103 D3 16       		OUT 	(CF_LBA3),A
0198   5105 3E 01       		ld a,1
0199   5107 D3 12       		OUT 	(CF_SECCOUNT),A
0200   5109 CD 41 51    		CALL 	cfWait
0201   510C             
0202   510C 3E 30       		LD 	A,CF_WRITE_SEC
0203   510E D3 17       		OUT 	(CF_COMMAND),A
0204   5110             
0205   5110 CD 41 51    		CALL 	cfWait
0206   5113             
0207   5113 0E 02       		LD 	c,2
0208   5115             wr4sec2:
0209   5115 CD 41 51    		CALL 	cfWait
0210   5118 CD 4C 51            call   cfWaitDRQ
0211   511B 21 5C 51    		LD 	HL,dirData
0212   511E 06 80       		LD 	b,128
0213   5120 7E          wrByte2:		LD 	A,(HL)
0214   5121 00          		nop
0215   5122 00          		nop
0216   5123 D3 10       		OUT 	(CF_DATA),A
0217   5125 23          		iNC 	HL
0218   5126 05          		dec 	b
0219   5127 20 F7       		JR 	NZ, wrByte2
0220   5129             
0221   5129 0D          		dec 	c
source\form128.asm line 0222: Label not found: (wr4secs2)
source\form128.asm line 0222: Range of relative branch exceeded. 
0222   512A 20 00       		JR 	NZ,wr4secs2
0223   512C             
0224   512C E1          		POP 	HL
0225   512D C1          		POP 	BC
0226   512E F1          		POP 	AF
0227   512F             
0228   512F C9          		RET
0229   5130             
0230   5130             ;================================================================================================
0231   5130             ; Utilities
0232   5130             ;================================================================================================
0233   5130             
0234   5130             printInline:
0235   5130 E3          		EX 	(SP),HL 	; PUSH HL and put RET ADDress into HL
0236   5131 F5          		PUSH 	AF
0237   5132 C5          		PUSH 	BC
0238   5133 7E          nextILChar:	LD 	A,(HL)
0239   5134 FE 00       		CP	0
0240   5136 28 04       		JR	Z,endOfPrint
0241   5138 CF          		RST 	08H
0242   5139 23          		INC 	HL
0243   513A 18 F7       		JR	nextILChar
0244   513C 23          endOfPrint:	INC 	HL 		; Get past "null" terminator
0245   513D C1          		POP 	BC
0246   513E F1          		POP 	AF
0247   513F E3          		EX 	(SP),HL 	; PUSH new RET ADDress on stack and restore HL
0248   5140 C9          		RET
0249   5141             
0250   5141             ;================================================================================================
0251   5141             ; Wait for disk to be ready (busy=0,ready=1)
0252   5141             ;================================================================================================
0253   5141             cfWait:
0254   5141 F5          		PUSH 	AF
0255   5142             cfWait1:
0256   5142 DB 17       		in 	A,(CF_STATUS)
0257   5144 E6 80       		AND 	080H
0258   5146 FE 80       		cp 	080H
0259   5148 28 F8       		JR	Z,cfWait1
0260   514A F1          		POP 	AF
0261   514B C9          		RET
0262   514C             cfWaitDRQ:
0263   514C F5          		push	af
0264   514D             cfWaitDRQ1:
0265   514D DB 17       		in 	A,(CF_STATUS)
0266   514F E6 08       		AND 	008H
0267   5151 FE 08       		cp 	008H
0268   5153 20 F8       		JR	NZ,cfWaitDRQ1
0269   5155 F1          		POP 	AF
0270   5156 C9          		RET
0271   5157 00          secNo		.db	0
0272   5158 00          drvName		.db	0
0273   5159 00          lba0		.db 0
0274   515A 00          lba1		.db 0
0275   515B 00          lba2		.db 0
0276   515C             
0277   515C             
0278   515C             ; Directory data for 1 x 128 byte sector
0279   515C             dirData:
0280   515C E52020202020		.DB $E5,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$00,$00,$00,$00
0280   5162 20202020202000000000
0281   516C 000000000000		.DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
0281   5172 00000000000000000000
0282   517C             
0283   517C E52020202020		.DB $E5,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$00,$00,$00,$00
0283   5182 20202020202000000000
0284   518C 000000000000		.DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
0284   5192 00000000000000000000
0285   519C             
0286   519C E52020202020		.DB $E5,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$00,$00,$00,$00
0286   51A2 20202020202000000000
0287   51AC 000000000000		.DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
0287   51B2 00000000000000000000
0288   51BC             
0289   51BC E52020202020		.DB $E5,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$00,$00,$00,$00
0289   51C2 20202020202000000000
0290   51CC 000000000000		.DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
0290   51D2 00000000000000000000
0291   51DC             
0292   51DC             		.END
tasm: Number of errors = 2
